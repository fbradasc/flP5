/* Scenix SX has a superset of the PIC 12-bit instruction set */
/*
 * It would be nice if there was a more elegant way to do this,
 * either by adding a flags field to struct insn, or by allowing a
 * processor to have more than one associated table.
 */
const Pic::Instruction ScenixSX::opcodes[] = {
  { "addwf",  0xfc0, 0x1c0,     INSN_CLASS_OPWF5    },
  { "andlw",  0xf00, 0xe00,     INSN_CLASS_LIT8     },
  { "andwf",  0xfc0, 0x140,     INSN_CLASS_OPWF5    },
  { "bank",   0xff8, 0x018,     INSN_CLASS_LIT3_BANK}, /* SX only */
  { "bcf",    0xf00, 0x400,     INSN_CLASS_B5       },
  { "bsf",    0xf00, 0x500,     INSN_CLASS_B5       },
  { "btfsc",  0xf00, 0x600,     INSN_CLASS_B5       },
  { "btfss",  0xf00, 0x700,     INSN_CLASS_B5       },
  { "call",   0xf00, 0x900,     INSN_CLASS_LIT8C12  },
  { "clrf",   0xfe0, 0x060,     INSN_CLASS_OPF5     },
  { "clrw",   0xfff, 0x040,     INSN_CLASS_IMPLICIT },
  { "clrwdt", 0xfff, 0x004,     INSN_CLASS_IMPLICIT },
  { "comf",   0xfc0, 0x240,     INSN_CLASS_OPWF5    },
  { "decf",   0xfc0, 0x0c0,     INSN_CLASS_OPWF5    },
  { "decfsz", 0xfc0, 0x2c0,     INSN_CLASS_OPWF5    },
  { "goto",   0xe00, 0xa00,     INSN_CLASS_LIT9     },
  { "incf",   0xfc0, 0x280,     INSN_CLASS_OPWF5    },
  { "incfsz", 0xfc0, 0x3c0,     INSN_CLASS_OPWF5    },
  { "iorlw",  0xf00, 0xd00,     INSN_CLASS_LIT8     },
  { "iorwf",  0xfc0, 0x100,     INSN_CLASS_OPWF5    },
  { "iread",  0xfff, 0x041,     INSN_CLASS_IMPLICIT }, /* SX only */
  { "mode",   0xff0, 0x050,     INSN_CLASS_LIT4     }, /* SX only */
  { "movf",   0xfc0, 0x200,     INSN_CLASS_OPWF5    },
  { "movlw",  0xf00, 0xc00,     INSN_CLASS_LIT8     },
  { "movmw",  0xfff, 0x042,     INSN_CLASS_IMPLICIT }, /* SX only */
  { "movwf",  0xfe0, 0x020,     INSN_CLASS_OPF5     },
  { "movwm",  0xfff, 0x043,     INSN_CLASS_IMPLICIT }, /* SX only */
  { "nop",    0xfff, 0x000,     INSN_CLASS_IMPLICIT },
  { "option", 0xfff, 0x002,     INSN_CLASS_IMPLICIT },
  { "page",   0xff8, 0x010,     INSN_CLASS_LIT3_PAGE}, /* SX only */
  { "reti",   0xfff, 0x00e,     INSN_CLASS_IMPLICIT }, /* SX only */
  { "retiw",  0xfff, 0x00f,     INSN_CLASS_IMPLICIT }, /* SX only */
  { "retlw",  0xf00, 0x800,     INSN_CLASS_LIT8     },
  { "retp",   0xfff, 0x00d,     INSN_CLASS_IMPLICIT }, /* SX only */
  { "return", 0xfff, 0x00c,     INSN_CLASS_IMPLICIT }, /* SX only */
  { "rlf",    0xfc0, 0x340,     INSN_CLASS_OPWF5    },
  { "rrf",    0xfc0, 0x300,     INSN_CLASS_OPWF5    },
  { "sleep",  0xfff, 0x003,     INSN_CLASS_IMPLICIT },
  { "subwf",  0xfc0, 0x080,     INSN_CLASS_OPWF5    },
  { "swapf",  0xfc0, 0x380,     INSN_CLASS_OPWF5    },
  { "tris",   0xff8, 0x000,     INSN_CLASS_OPF5     },
  { "xorlw",  0xf00, 0xf00,     INSN_CLASS_LIT8     },
  { "xorwf",  0xfc0, 0x180,     INSN_CLASS_OPWF5    },
  { 0      ,  0x000, 0x000,     0                   }
};
